name: Build Go Backend

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    name: Build Executables
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            output: osrs-price-api-linux-amd64
          - goos: linux
            goarch: arm64
            output: osrs-price-api-linux-arm64
          - goos: darwin
            goarch: amd64
            output: osrs-price-api-darwin-amd64
          - goos: darwin
            goarch: arm64
            output: osrs-price-api-darwin-arm64
          - goos: windows
            goarch: amd64
            output: osrs-price-api-windows-amd64.exe

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Get dependencies
      run: go mod download

    - name: Run tests
      run: go test -v ./...

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        go build -ldflags="-s -w" -o bin/${{ matrix.output }} main.go

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.output }}
        path: bin/${{ matrix.output }}
        retention-days: 30

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release Tag
      id: tag
      run: |
        TAG="build-$(date +'%Y%m%d-%H%M%S')"
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "Created tag: $TAG"

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        name: Build ${{ steps.tag.outputs.tag }}
        draft: false
        prerelease: false
        files: |
          artifacts/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}