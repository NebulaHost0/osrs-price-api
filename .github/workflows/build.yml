name: Build and Release

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: write
  packages: write

jobs:
  # Build Docker image and push to GitHub Container Registry
  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=raw,value=latest,enable={{is_default_branch}}
          type=sha,prefix={{date 'YYYY.MM.DD'}}-
          type=ref,event=branch
          type=ref,event=pr

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

    - name: Update deployment instructions
      run: |
        echo "🐳 Docker image published!"
        echo "📦 Pull with: docker pull ghcr.io/${{ github.repository }}:latest"
        echo "🚀 Deploy to Portainer using the image above"

  build:
    name: Build Executables
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            output: osrs-price-api-linux-amd64
          - goos: linux
            goarch: arm64
            output: osrs-price-api-linux-arm64
          - goos: darwin
            goarch: amd64
            output: osrs-price-api-darwin-amd64
          - goos: darwin
            goarch: arm64
            output: osrs-price-api-darwin-arm64
          - goos: windows
            goarch: amd64
            output: osrs-price-api-windows-amd64.exe

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Get dependencies
      run: go mod download

    - name: Run tests
      run: go test -v ./...

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        go build -ldflags="-s -w" -o bin/${{ matrix.output }} main.go

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.output }}
        path: bin/${{ matrix.output }}
        retention-days: 30

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Display structure of downloaded files
      run: ls -R artifacts/

    - name: Prepare release files
      run: |
        mkdir -p release
        find artifacts -type f -exec cp {} release/ \;
        ls -lh release/

    - name: Create Release Tag
      id: tag
      run: |
        TAG="v$(date +'%Y.%m.%d-%H%M')"
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "Created tag: $TAG"

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        name: Release ${{ steps.tag.outputs.tag }}
        body: |
          Automated build from commit ${{ github.sha }}
          
          ## Download Instructions
          
          **Linux (64-bit)**:
          ```bash
          wget https://github.com/${{ github.repository }}/releases/download/${{ steps.tag.outputs.tag }}/osrs-price-api-linux-amd64
          chmod +x osrs-price-api-linux-amd64
          ./osrs-price-api-linux-amd64
          ```
          
          **macOS (Apple Silicon)**:
          ```bash
          wget https://github.com/${{ github.repository }}/releases/download/${{ steps.tag.outputs.tag }}/osrs-price-api-darwin-arm64
          chmod +x osrs-price-api-darwin-arm64
          ./osrs-price-api-darwin-arm64
          ```
          
          **Windows**:
          Download `osrs-price-api-windows-amd64.exe` and run it.
        draft: false
        prerelease: false
        files: release/*
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}